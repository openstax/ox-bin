#!/usr/bin/env bash

# todo - make this better by reading current script location
install_location="$HOME/.ox-bin"

usage() {
  cat <<HELP
usage:
ox [command]

Commands:
  register    adds ox-bin PATH in shell profile
  deregister  removes referenecs to ox-bin from host
  uninstall   deregister and remove all files
  update      self-update ox-bin
HELP
  exit 1
}

cmd="$1"
shift

case "$cmd" in
  register)
    "$install_location"/bin/ox deregister
    for file in "$install_location"/bin/*; do
      filename=$(basename "$file")
      ln -s "$file" "/usr/local/bin/$filename"
    done
    ;;
  deregister)
    for file in "$install_location"/bin/*; do
      filename=$(basename "$file")
      rm -f "/usr/local/bin/$filename"
    done
    ;;
  uninstall)
    "$install_location"/bin/ox deregister
    rm -fr "$install_location"
    ;;
  update)
    "$install_location"/bin/ox deregister
    # todo - error messaging
    cd "$install_location" || exit 1;
    git pull
    # todo - this will generate an error if user 
    # doesn't have access to repo, handle gracefully
    git submodule update --init --recursive
    "$install_location"/bin/ox register
    ;;
  "")
    usage
    ;;
  *)
    command_file="$install_location/lib/$cmd"
    if [ ! -x "$command_file" ]; then
      usage
    fi

    "$command_file" "$@"
    ;;
esac
